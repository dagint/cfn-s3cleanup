AWSTemplateFormatVersion: 2010-09-09

Mappings:
  SourceCode:
    General:
      S3Bucket: 'protectwithwaf'
      KeyPrefix: 'ProtectWithWAF'

Resources:
  AppAccessLogBucket:
    Type: AWS::S3::Bucket

  cleanupBucketOnDelete:
    Type: Custom::cleanupbucket
    Properties:
      ServiceToken: !GetAtt LambdaS3CleanupFunction.Arn
      BucketName: !Ref AppAccessLogBucket

  LambdaRoleS3Cleanup:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        Policies:
          - PolicyName: S3Access
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - 's3:*'
                  Resource:
                    - !Sub 'arn:aws:s3:::${AppAccessLogBucket}'
                - Effect: Deny
                  Action:
                    - s3:DeleteBucket
                  Resource: '*'
          - PolicyName: LogsAccess
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - 'logs:*'
                  Resource:
                    - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*'

  LambdaS3CleanupFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: >-
        This lambda function is used to clean up s3 bucket created in this cloudformation.  It will delete all objects and then delete the bucket.
      Handler:  's3cleanup.handler'
      Role: !GetAtt LambdaRoleS3Cleanup.Arn
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key: !Join ['/', [!FindInMap ["SourceCode", "General", "KeyPrefix"], 's3cleanup.zip']]
      Runtime: python3.7
      MemorySize: 128
      Timeout: 300

Outputs:
  myS3Bucket:
    Value:  !FindInMap ["SourceCode", "General", "S3Bucket"]
  myS3Key:
    Value:  !Join ['/', [!FindInMap ["SourceCode", "General", "KeyPrefix"], 's3cleanup.zip']]
